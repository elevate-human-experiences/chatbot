services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file: .env
    volumes:
      - ./backend/app:/home/user/app
    depends_on:
      - mongodb
      - redis
      - mcp
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  mcp:
    build:
      context: ./mcp
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    env_file: .env
    volumes:
      - ./mcp/app:/home/user/app
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    ports:
      - "5173:5173"  # Changed to match Vite's default port
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8080
    volumes:
      - ./frontend/src:/home/user/app/src
      - ./frontend/public:/home/user/app/public
    command: ["dev"]
    depends_on:
      - backend
    networks:
      - chatbot-network

  mongodb:
    image: mongo:7
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=chatbot
    volumes:
      - mongodb_data:/data/db
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
  redis_data:

networks:
  chatbot-network:
    driver: bridge
